"""add_schedule_and_holiday_tables

Revision ID: 08c0ebfec426
Revises: 05e2055eb83a
Create Date: 2025-05-26 13:39:10.442012

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '08c0ebfec426'
down_revision: Union[str, None] = '05e2055eb83a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('holidays',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('grade_filter', sa.String(length=100), nullable=True, comment='NULL for all grades, or specific grade identifier(s)'),
    sa.CheckConstraint('start_date <= end_date', name=op.f('ck_holidays_ck_holiday_date_order')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_holidays'))
    )
    with op.batch_alter_table('holidays', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_holidays_id'), ['id'], unique=False)

    op.create_table('class_schedule_slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_class_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('subject_name', sa.String(length=100), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('period_number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_class_id'], ['schoolclasses.id'], name=op.f('fk_class_schedule_slots_school_class_id_schoolclasses_id'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], name=op.f('fk_class_schedule_slots_teacher_id_users_id'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_class_schedule_slots')),
    sa.UniqueConstraint('school_class_id', 'day_of_week', 'period_number', name='uq_class_day_period'),
    sa.UniqueConstraint('teacher_id', 'day_of_week', 'period_number', name='uq_teacher_day_period')
    )
    with op.batch_alter_table('class_schedule_slots', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_class_schedule_slots_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('class_schedule_slots', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_class_schedule_slots_id'))

    op.drop_table('class_schedule_slots')
    with op.batch_alter_table('holidays', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_holidays_id'))

    op.drop_table('holidays')
    # ### end Alembic commands ###
