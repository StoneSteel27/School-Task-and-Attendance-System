"""add_schoolclass_etc_v3

Revision ID: a50e859376e0
Revises: 4cc6086f9a78
Create Date: 2025-05-21 10:21:16.222803

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a50e859376e0'
down_revision: Union[str, None] = '4cc6086f9a78'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schoolclasses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('grade', sa.String(), nullable=True),
    sa.Column('section', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schoolclasses'))
    )
    with op.batch_alter_table('schoolclasses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_schoolclasses_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_schoolclasses_name'), ['name'], unique=True)

    op.create_table('teacher_class_association',
                    sa.Column('teacher_id', sa.Integer(), nullable=False),
                    sa.Column('class_id', sa.Integer(), nullable=False),
                    sa.Column('subject', sa.String(length=100), nullable=False),
                    # Added length here too for consistency
                    sa.ForeignKeyConstraint(['class_id'], ['schoolclasses.id'],
                                            name=op.f('fk_teacher_class_association_class_id_schoolclasses_id'),
                                            ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'],
                                            name=op.f('fk_teacher_class_association_teacher_id_users_id'),
                                            ondelete='CASCADE'),
                    # Corrected Primary Key Constraint
                    sa.PrimaryKeyConstraint('teacher_id', 'class_id', 'subject',
                                            name=op.f('pk_teacher_class_subject_association'))
                    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('school_class_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_user_school_class', 'schoolclasses', ['school_class_id'], ['id'], ondelete='SET NULL')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_school_class', type_='foreignkey')
        batch_op.drop_column('school_class_id')

    op.drop_table('teacher_class_association')
    with op.batch_alter_table('schoolclasses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_schoolclasses_name'))
        batch_op.drop_index(batch_op.f('ix_schoolclasses_id'))

    op.drop_table('schoolclasses')
    # ### end Alembic commands ###
